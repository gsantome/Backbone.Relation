/**
 * Backbone.Relation.js 0.1.1
 * (c) 2014 Gonzalo Santom√© (https://github.com/gsantome/Backbone.Relation)
 *
 * Backbone.Relation may be freely distributed under the MIT license; see the accompanying LICENSE.txt.
 * For details and documentation: https://github.com/gsantome/Backbone.Relation.
 * Depends on Backbone (and thus on Underscore as well): https://github.com/documentcloud/backbone.
 *
 * Example:
 *
	TaskContainerModel = Backbone.Relation.extend({
		relation: {
			model: Backbone.Model,
			key: 'task'
		}
	});

	or

	TaskContainerModel = Backbone.Relation.extend({
		relation: {
			model: Backbone.Collection,
			key: 'tasks'
		}
	});

	or 

	TaskContainerModel = Backbone.Relation.extend({
		relation: [{
			model: Backbone.Collection,
			key: 'tasks'
		}, {
			model: Backbone.Model,
			key: 'user'
		}]
	});
	
	or  if you are using RequireJS and you need circular dependency you could use PATH

	TaskContainerModel = Backbone.Relation.extend({
		relation: {
			model: MyModel,
			key: 'tasks'
			path: 'path/models/mymodel'
		}
	});

	// When user fetch a model or initialize a model TaskContainerModel everyting inside
	// the response or the values with the name 'task' will go to a new Model, or to a Collection
 */
!function(a,b){"function"==typeof define&&define.amd?define(["require","exports","backbone","underscore"],b):"undefined"!=typeof exports?b(require,exports,require("backbone"),require("underscore")):b(a.require,a,a.Backbone,a._)}(this,function(a,b,c,d){"use strict";c.Relation=c.Model.extend({relation:null,initialize:function(a){var c=this.relation;c&&a&&(d.isArray(c)?d(c).forEach(function(b){this.initializeStructure(a,b)},this):this.initializeStructure(a,c))},parse:function(a){var b=this.relation;return d.isArray(b)?d(b).forEach(function(b){this.initializeStructure(a,b)},this):this.initializeStructure(a,b),a},initializeStructure:function(b,d){if(b[d.key]){var e=d.model||d.collection;if(e||(e=a(d.path)),!(b[d.key]instanceof c.Collection||b[d.key]instanceof c.Model)){var f;b[d.key]instanceof c.Collection?(f=new e,f.reactReset(b[d.key])):f=new e(b[d.key]),this.set(d.key,f),b[d.key]=f}}}})});